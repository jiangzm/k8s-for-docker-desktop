apiVersion: v1
kind: Namespace
metadata:
  labels:
    app.kubernetes.io/instance: kube-devops
    app.kubernetes.io/name: kube-devops
  name: kube-devops
---
kind: Deployment
apiVersion: apps/v1
metadata:
  labels:
    k8s-app: echoserver
  name: echoserver
  namespace: kube-devops
spec:
  replicas: 1
  selector:
    matchLabels:
      app: echoserver
  template:
    metadata:
      labels:
        app: echoserver
    spec:
      containers:
      - image: registry.cn-shenzhen.aliyuncs.com/k8shub/echoserver:1.10
        imagePullPolicy: IfNotPresent
        name: echoserver
        ports:
        - containerPort: 8080
        resources:
          requests:
            cpu: 100m
            memory: 200Mi
        env:
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: POD_IP
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
---
apiVersion: v1
kind: Service
metadata:
  name: echoserver
  namespace: kube-devops
  labels:
    k8s-app: echoserver
spec:
  ports:
  - name: http
    port: 80
    targetPort: 8080
    protocol: TCP
  selector:
    app: echoserver
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: echoserver
  namespace: kube-devops
  labels:
    k8s-app: echoserver
spec:
  ingressClassName: nginx
  rules:
  - host: echo.app.test
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: echoserver
            port: 
              number: 80
